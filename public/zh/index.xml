<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>阿毛的随便写写</title>
    <link>https://amao.run/zh/</link>
    <description>Recent content on 阿毛的随便写写</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 16 Mar 2021 22:28:36 +0100</lastBuildDate><atom:link href="https://amao.run/zh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>分布式系统之基础抽象</title>
      <link>https://amao.run/zh/posts/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B9%8B%E5%9F%BA%E7%A1%80%E6%8A%BD%E8%B1%A1/</link>
      <pubDate>Tue, 16 Mar 2021 22:28:36 +0100</pubDate>
      
      <guid>https://amao.run/zh/posts/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B9%8B%E5%9F%BA%E7%A1%80%E6%8A%BD%E8%B1%A1/</guid>
      <description>1. 分布式抽象的必要性 1.1 任何分布式系统的核心都是分布式算法 作为网络（系统）与应用的中间件实现。
   系统的通道 &amp;lt;&amp;mdash;&amp;mdash;-&amp;gt; 系统的通道     中间件的算法  中间件的算法   应用  应用    1.2 可靠的应用需要比网络协议（e.g. TCP，UDP）更强大的底层服务 1.2.1 通信  只能为一对一通信（客户端-服务端）提供可靠性保证（比如TCP） 如何做到组通信？   可靠广播 Reliable Broadcast
因果顺序广播 Causal order Broadcast
全序广播 Total order Broadcast
 1.2.2 高层服务  有时，多对多通讯是不够的 需要可靠的高层服务   共享内存
共识（Consensus, 不是Consistency）
原子性提交
复制状态机
 1.3 举例 ①. 可靠广播 确保发送至组的信息要么被所有成员收到要么没有一个成员收到
②. 原子性提交 确保各进程就是否提交或终止事务（Transaction）达成一致决定。（既确保状态一致）
2. 基于事件的组件模型 2.</description>
    </item>
    
    <item>
      <title>我是谁？</title>
      <link>https://amao.run/zh/about/</link>
      <pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://amao.run/zh/about/</guid>
      <description>KTH分布式系统专业硕士在读
Arch Linux教徒，不敢妄言熟知Linux，但是将Arch Linux作为唯一系统也使用了3年，后来微软开始干人事儿后转回微软阵营，Arch Linux作为WSL以及备用系统使用。
前车万人，后来退烧了就不混二刺螈圈子了。心中最喜欢的二次元作品是CLANNAD，CLANNAD在我初高中时初步的培养了我正确的三观。
我相信Rust是未来的主流语言，同时我正在努力尝试学习TypeScript。但是因为专业是分布式，上课更多是用Scala，Erlang这种函数式语言（但说实话，函数式的思想实在是杀我）。
其实梦想是独立游戏开发者，因为我认为只有游戏这种不被材料或者荧幕所限制的载体才是讲故事，呈现艺术的最好的方式。我心中也有想要和大家讲的故事，我也希望能讲出像曾经那些感动过我的好的第九艺术。</description>
    </item>
    
    <item>
      <title>瑞典ICA学生银行卡办理激活教程</title>
      <link>https://amao.run/zh/posts/%E7%91%9E%E5%85%B8ica%E5%AD%A6%E7%94%9F%E9%93%B6%E8%A1%8C%E5%8D%A1%E5%8A%9E%E7%90%86%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/</link>
      <pubDate>Thu, 01 Oct 2020 01:41:53 +0000</pubDate>
      
      <guid>https://amao.run/zh/posts/%E7%91%9E%E5%85%B8ica%E5%AD%A6%E7%94%9F%E9%93%B6%E8%A1%8C%E5%8D%A1%E5%8A%9E%E7%90%86%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;h2 id=&#34;0x00-前言&#34;&gt;0x00 前言&lt;/h2&gt;
&lt;p&gt;ICA学生卡的好处还挺多，办理方便，存取钱方便，免除一切管理费，ICA购物积分优惠也尽享，国际转账也不成问题。而最近群内问ICA银行卡问题的人也多了，我这人也生性懒惰，一遍一遍解释实乃非我风格，故写下此教程文为朋友答疑解惑。&lt;/p&gt;
&lt;p&gt;本文按照流程分为申请，激活，使用三个部分，请大家按需使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS：由于本人已经激活许久，所以很多部分无法提供截图与照片了。只能凭借记忆用文字完善，见谅。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;若你按照此教程依然遇到了无法解决的问题。请及时群内咨询群主，我也好第一时间纠正教程内容。若你不在群内，请在本文下方留言（需要github账号）。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>回到Windows，最全教程让你的Powershell更好看且好用</title>
      <link>https://amao.run/zh/posts/%E5%9B%9E%E5%88%B0windows%E8%AE%A9%E4%BD%A0%E7%9A%84powershell%E6%9B%B4%E5%A5%BD%E7%9C%8B%E4%B8%94%E5%A5%BD%E7%94%A8/</link>
      <pubDate>Fri, 05 Jun 2020 15:18:02 +0000</pubDate>
      
      <guid>https://amao.run/zh/posts/%E5%9B%9E%E5%88%B0windows%E8%AE%A9%E4%BD%A0%E7%9A%84powershell%E6%9B%B4%E5%A5%BD%E7%9C%8B%E4%B8%94%E5%A5%BD%E7%94%A8/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://amao.run/images/%E5%9B%9E%E5%88%B0Windows%EF%BC%8C%E8%AE%A9%E4%BD%A0%E7%9A%84powershell%E6%9B%B4%E5%A5%BD%E7%9C%8B%E4%B8%94%E5%A5%BD%E7%94%A8/screenshot.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x00-前言&#34;&gt;0x00 前言&lt;/h2&gt;
&lt;p&gt;从ArchLinux退烧（现在是低烧状态，还是非常非常喜欢Arch的）回坑Windows 10后，因为有了两年多的Gnome以及Kde的使用经验后，回来其实发现Windows的UI设计并没有那么的不堪，甚至是有很多可取之处的。可能只是之前用了太久反而会唾弃之吧。再加上这几年微软开始拥抱开源并且回馈开源，有很多好的项目都提出来了并且已经release了，因此我对微软的态度也来了个大转变，现在日常生活生态和撸代码环境也都往微软生态上转移了（365真香！）。我先用了半年的win10，从1903到现在的2004，对微软的设计稍微有了些自己的见解后，便将一些能够极大提升使用体验的小方法写了出来。正好最近入手了一个二手Surface Pro买来学习用和轻办公，正好借着这个机会从头到尾的写一篇美化Powershell的教程，也算是备忘用。最终效果应当如头图（头图是我的主力机上之前截下来的旧图）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>东方同人乐推荐交响篇-交响ActiveNEETs</title>
      <link>https://amao.run/zh/posts/%E6%AD%A4%E7%94%9F%E6%97%A0%E6%82%94%E5%85%A5%E4%B8%9C%E6%96%B9/</link>
      <pubDate>Mon, 03 Feb 2020 01:03:04 +0000</pubDate>
      
      <guid>https://amao.run/zh/posts/%E6%AD%A4%E7%94%9F%E6%97%A0%E6%82%94%E5%85%A5%E4%B8%9C%E6%96%B9/</guid>
      <description>【东方】花映塚串烧【交响ActiveNEETs】 https://www.bilibili.com/video/av7722061
这个同人社团可以说是大推，观其名便可知是做东方曲交响乐化的，但是这个社团啥都做，舰娘也是其另一个重要的系列。其每一个重新编曲的交响都恢宏大气，往往沉醉其中，而忘了手中的作业（x）。</description>
    </item>
    
    <item>
      <title>在ArchLinux下编译LineageOS16.0</title>
      <link>https://amao.run/zh/posts/%E5%9C%A8archlinux%E4%B8%8B%E7%BC%96%E8%AF%91lineageos16-0/</link>
      <pubDate>Sun, 15 Sep 2019 13:53:02 +0000</pubDate>
      
      <guid>https://amao.run/zh/posts/%E5%9C%A8archlinux%E4%B8%8B%E7%BC%96%E8%AF%91lineageos16-0/</guid>
      <description>&lt;h2 id=&#34;917更新&#34;&gt;9/17更新&lt;/h2&gt;
&lt;p&gt;你依然可以通过本文进行其他类似机型的编译&lt;/p&gt;
&lt;p&gt;&lt;del&gt;本人实测小米6刷入编译出来的包会卡米，也就是卡在开机MI logo上，和一些dalao讨论貌似是小米部分机型与lineage自带的clang版本冲突。可能被波及了。等我XDA问完，这边再给可能的解决方案。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;就在我痛苦不堪的时候，发现LOS团队&lt;a href=&#34;https://github.com/LineageOS/hudson/commit/9e0206569670a2566562e000b9f1e3492eacca83&#34;&gt;悄悄把小米部分机型恢复了。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;怕折腾的，还是刷官方包吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;0x00-背景事件&#34;&gt;0x00 背景事件&lt;/h2&gt;
&lt;p&gt;8月9日，北京商汤在github上提交了&lt;a href=&#34;https://github.com/github/dmca/blob/master/2019/08/2019-08-09-SenseTime-5.md&#34;&gt;DMCA投诉&lt;/a&gt;，因为自家授权给小米的面部解锁专利被“开源”，故请求github删除“涉案”的454个repo，这其中主要提及到了TheMuppets团队一直维护的&lt;a href=&#34;https://github.com/TheMuppets/proprietary_vendor_xiaomi&#34;&gt;小米vendor仓库&lt;/a&gt;。这个仓库也是LineageOS团队（以下简称为LOS）一直依赖（合作）的vendor源。因为这个事件，LOS团队停止了8月8号之后的xiaomi机型的所有offical的ROM编译工作。截止本post编写时，工作依然没有恢复。官网版本一直停留在0808-nightly上。&lt;/p&gt;
&lt;p&gt;作者正是LOS16的用户，这个类原生OS一直给我带来很好的用户体验。但是不幸的是0808版本遗留下了微信QQ等网络电话APP无法获取录音权限的问题，虽然社区很快接收到了反馈并做了patch。但是因为DMCA事件导致我们现在无法收到OTA更新了。现在和父母以及同学交流非常不便，只能回到宿舍使用ipad打电话。1个月后感觉DMCA事件没有什么解决进展，被逼无奈的我只好自己动手编译最新代码。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DDE下触控板手势修改</title>
      <link>https://amao.run/zh/posts/dde%E4%B8%8B%E8%A7%A6%E6%8E%A7%E6%9D%BF%E6%89%8B%E5%8A%BF%E4%BF%AE%E6%94%B9/</link>
      <pubDate>Sun, 04 Aug 2019 19:42:22 +0000</pubDate>
      
      <guid>https://amao.run/zh/posts/dde%E4%B8%8B%E8%A7%A6%E6%8E%A7%E6%9D%BF%E6%89%8B%E5%8A%BF%E4%BF%AE%E6%94%B9/</guid>
      <description>&lt;p&gt;这个post比较短。只是起到备忘的操作。&lt;/p&gt;
&lt;p&gt;因为我一直是arch+dde的使用环境，deepin还是有不少能吸引我的地方，就比方说开发组的坚持，以及良好的社区。&lt;/p&gt;
&lt;p&gt;因为我一直习惯是触控板自然滚动，即两指向上为页面向下这样的。这一点可以再设置面板里面改，但是却仅限两指滚动。而四指左右滑切换桌面却还是正规的左右，想要变成自然滑动，需要额外做一下配置。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>愿你为“幸运之星“-武本康弘</title>
      <link>https://amao.run/zh/posts/%E6%84%BF%E4%BD%A0%E4%B8%BA%E5%B9%B8%E8%BF%90%E4%B9%8B%E6%98%9F-%E6%AD%A6%E6%9C%AC%E5%BA%B7%E5%BC%98/</link>
      <pubDate>Wed, 24 Jul 2019 18:04:53 +0000</pubDate>
      
      <guid>https://amao.run/zh/posts/%E6%84%BF%E4%BD%A0%E4%B8%BA%E5%B9%B8%E8%BF%90%E4%B9%8B%E6%98%9F-%E6%AD%A6%E6%9C%AC%E5%BA%B7%E5%BC%98/</guid>
      <description>文/ 已经是一只大鸽子的阿毛
“今日twitter上关于武本老师依旧没有新闻，我已不抱太大希望，老师你赶紧把手机充上电吧！”
我出国之前特意把clannad（以及AS）带了出来。steam上也入了正。也算是在二次元方面给以前的我一个交代。
对于我来说，我没有看过凉宫春日，也未曾看过kon, 甚至未曾看完（弃番）紫罗兰。我对京阿尼的感情也就是它与key之间的联系了。哦对了，还有幸运星。
目前逐渐厌弃二次元的我，却永远永远无法忘掉CL这部作品。我时常说，clannad给了年少时阿毛对爱与羁绊的希望，即使我如今三观不正，但只要谈起clannad，心总是暖的，（会立刻双眼放空，露出痴汉笑）
但这是我第一篇关于京阿尼事件作评的文，若非今日（22日）看到曾担任cl原画的武本康弘老师的谣言，我可能也不会写这么一堆乱七八糟的东西。思想三次元的我，真的很难再有能够单纯的看二次元的心境。厌恶，恶心，难受。
但就是这样，你会陷入面对现实与对于面对现实的自己的厌恶的螺旋之中。然后感叹，年轻真好，喜欢二次元真好，然后再大骂自己虚伪！恶心自己的成长！恶心自己的虚伪！然后冷静下来，已经习惯的你可能也不再为此流泪，然后开始回忆cl，秒五，回忆纯真，感叹一句年轻真好。然后再恶心自己。
写到最后，我tm也不知道都写了些什么乐色。我最开始只是想表达希望明天一早能看见官方对武本康弘老师谣言的澄清公告。睡了。</description>
    </item>
    
    <item>
      <title>Arch Linux 下两种推荐的bootloader（下）：rEFInd</title>
      <link>https://amao.run/zh/posts/arch-linux-%E4%B8%8B%E4%B8%A4%E7%A7%8D%E6%8E%A8%E8%8D%90%E7%9A%84bootloader%E4%B8%8Brefind/</link>
      <pubDate>Sun, 24 Mar 2019 19:39:53 +0000</pubDate>
      
      <guid>https://amao.run/zh/posts/arch-linux-%E4%B8%8B%E4%B8%A4%E7%A7%8D%E6%8E%A8%E8%8D%90%E7%9A%84bootloader%E4%B8%8Brefind/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://amao.run/zh/posts/arch-linux-%E4%B8%8B%E4%B8%A4%E7%A7%8D%E6%8E%A8%E8%8D%90%E7%9A%84bootloader%E4%B8%8Asystemd-boot/&#34;&gt;上一篇&lt;/a&gt;介绍了如何安装systemd-boot，这一篇给大家介绍另个非热门的热门bootloader，也更好看的refind。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/999cff82d4bea54f222e165d647b5df597f45b86/687474703a2f2f692e696d6775722e636f6d2f33624d473655372e706e67&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;rEFInd is a UEFI boot manager capable of launching EFISTUB kernels. It is a fork of the no-longer-maintained rEFIt and fixes many issues with respect to non-Mac UEFI booting. It is designed to be platform-neutral and to simplify booting multiple OSes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;refind给我的感觉就是不仅好看而且更实用，配置起来章法可依，参数详细，定制化更简单。好看的主题虽然数量应该不及GRUB多，但是质量均为不俗。&lt;/p&gt;
&lt;p&gt;最重要的是即使不做配置，它的全盘搜索efi可以检测到你所有的硬盘上拥有的安装的所有启动项！非常强大，非常方便，可以直接开箱即用！&lt;/p&gt;
&lt;p&gt;正因如此，它开机会慢一丢丢，但是因为直接读取了UEFI，所以也不会像是搜索文件那么夸张。仅仅是慢一丢丢。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Arch Linux 下两种推荐的bootloader（上）：systemd-boot</title>
      <link>https://amao.run/zh/posts/arch-linux-%E4%B8%8B%E4%B8%A4%E7%A7%8D%E6%8E%A8%E8%8D%90%E7%9A%84bootloader%E4%B8%8Asystemd-boot/</link>
      <pubDate>Sun, 24 Mar 2019 18:43:46 +0000</pubDate>
      
      <guid>https://amao.run/zh/posts/arch-linux-%E4%B8%8B%E4%B8%A4%E7%A7%8D%E6%8E%A8%E8%8D%90%E7%9A%84bootloader%E4%B8%8Asystemd-boot/</guid>
      <description>&lt;p&gt;维持一个博客还是蛮难的，并不是说服务器的维护，而是说更新博文。&lt;/p&gt;
&lt;p&gt;周更的Flag很快就倒了，一是说这一段时间学校的B事实在是太多，自己也不太争气。二是说，自己也不知道要写一些什么好，我还是太弱了，什么都不精通，了解的也少。&lt;/p&gt;
&lt;p&gt;不过最近正好安装了rEFInd用来替代之前一直用的systemd-boot，就一并介绍了。&lt;/p&gt;
&lt;p&gt;先说说为什么不说更常用的GRUB，首先是之前一大段时间一直是archlinux单系统的，没有必要用bootloader，所以GRUB这种较为“庞大”的我就放弃掉了。其次是本人一直以来非主流思想较为严重，对待主流事物一直有不健康的偏见思想……所以就更爱用一些“非主流”的东西。当然这里是相对的。实际上今天介绍的两个Bootloader还是很流行的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hexo 备份手记</title>
      <link>https://amao.run/zh/posts/hexo-%E5%A4%87%E4%BB%BD%E6%89%8B%E8%AE%B0/</link>
      <pubDate>Fri, 15 Feb 2019 10:11:34 +0000</pubDate>
      
      <guid>https://amao.run/zh/posts/hexo-%E5%A4%87%E4%BB%BD%E6%89%8B%E8%AE%B0/</guid>
      <description>&lt;p&gt;由于hexo只是将生成的静态页面推到github的io仓库里，这就导致了，如果你有一天想要异地更新博客，或者换机后也能更新博客，就必须要将本地的框架做数据备份，否则一旦丢失，是非常头疼的问题，99%是不能恢复成以前的博客了。&lt;/p&gt;
&lt;p&gt;做数据备份，往往都是物理上的或者云上的。物理上的便是复制整个文件夹到移动硬盘或者U盘随身带着。这些东西我并不少，但是总是个累赘，还有物理上的可能性损伤造成的数据丢失。或者就放到某个云盘上，还可以自动同步，只可惜作为ArchLinux为主系统的用户，本人常用的onedrive并不在该系统上提供官方服务，第三方的bin也无法做的实时检测文件更新并同步。&lt;/p&gt;
&lt;p&gt;那么既然自动化无望，无论如何都要定期手动备份，那我还是将整体作为项目放到github的仓库里吧。下边便是我做成之后写下的记录，也算是分享（虽然网上也是一大把这种教程）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>年前寒假总结-（美赛以及实习）</title>
      <link>https://amao.run/zh/posts/%E5%B9%B4%E5%89%8D%E5%AF%92%E5%81%87%E6%80%BB%E7%BB%93-%E7%BE%8E%E8%B5%9B%E4%BB%A5%E5%8F%8A%E5%AE%9E%E4%B9%A0/</link>
      <pubDate>Wed, 30 Jan 2019 22:27:54 +0000</pubDate>
      
      <guid>https://amao.run/zh/posts/%E5%B9%B4%E5%89%8D%E5%AF%92%E5%81%87%E6%80%BB%E7%BB%93-%E7%BE%8E%E8%B5%9B%E4%BB%A5%E5%8F%8A%E5%AE%9E%E4%B9%A0/</guid>
      <description>&lt;p&gt;昨天结束了美赛，明天我就要回家啦！&lt;/p&gt;
&lt;p&gt;休息了一整天，睡前发一下博客总结回味一下这半个月的年前寒假。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
